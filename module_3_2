###  Способы вызова функции ##module_3_2
def send_email(  message, recipient , sender = "university.help@gmail.com" ):
    recepient= recipient.lower()
    sender= sender.lower()
    xcontr= False
    if recipient.find ('@'):
        xcontr= True
        if recipient.find ('.com', len(recipient)-4) != -1:
            xcontr = True
        elif recipient.find ('.net', len(recipient)-4) != -1:
            xcontr = True
        elif recipient.find ('.ru', len(recipient)-3) != -1:
            xcontr = True
        else:
            print ('Невозможно отправить письмо с адреса ', sender,' на адрес ', recipient)
            return()
    if sender.find ('@'):
        xcontr= True
        if sender.find ('.com', len(sender)-4) != -1:
            xcontr = True
        elif sender.find ('.net', len(sender)-4) != -1:
            xcontr = True
        elif sender.find ('.ru', len(sender)-3) != -1:
            xcontr = True
        else:
            print ('Невозможно отправить письмо с адреса ', sender,' на адрес ', recipient)
            return()
    if sender == recepient:
        print ('Нельзя отправить письмо самому себе!')
        return()
    if sender == 'university.help@gmail.com':
        print ('Письмо успешно отправлено с адреса ', sender,' на адрес ', recipient)
    else:
        print('НЕСТАНДАРТНЫЙ ОТПРАВИТЕЛЬ! Письмо отправлено с адреса ', sender, ' на адрес ', recipient)
send_email('Это сообщение для проверки связи', 'vasyok1337@gmail.com')
send_email('Вы видите это сообщение как лучший студент курса!', 'urban.fan@mail.ru', sender='urban.info@gmail.com')
send_email('Пожалуйста, исправьте задание', 'urban.student@mail.ru', sender='urban.teacher@mail.uk')
send_email('Напоминаю самому себе о вебинаре', 'urban.teacher@mail.ru', sender='urban.teacher@mail.ru')

